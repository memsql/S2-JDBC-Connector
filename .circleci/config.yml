# ************************************************************************************
#   Copyright (c) 2021 SingleStore, Inc.
#
#   This library is free software; you can redistribute it and/or
#   modify it under the terms of the GNU Library General Public
#   License as published by the Free Software Foundation; either
#   version 2.1 of the License, or (at your option) any later version.
#
#   This library is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#   Library General Public License for more details.
#
#   You should have received a copy of the GNU Library General Public
#   License along with this library; if not see <http://www.gnu.org/licenses>
#   or write to the Free Software Foundation, Inc.,
#   51 Franklin St., Fifth Floor, Boston, MA 02110, USA
# *************************************************************************************/

# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
commands:
  setup_environment:
    description: "Setup the machine environment"
    parameters:
      sbt_version:
        type: string
        default: 1.3.5
    steps:
      - run:
          name: Setup Machine
          command: |
            sudo apt-get update
            sudo apt-get install -y sbt python3-pip git mariadb-client-core-10.3
            sudo apt-get clean
            sudo apt-get autoclean
jobs:
  test:
    parameters:
      singlestore_image:
        type: string
      singlestore_password:
        type: string
      machine_class:
        type: string
    working_directory: ~/singlestore-jdbc-client
    machine:
      image: ubuntu-2004:202008-01
    resource_class: << parameters.machine_class >>
    environment:
      SINGLESTORE_IMAGE: << parameters.singlestore_image >>
      SINGLESTORE_PASSWORD: << parameters.singlestore_password >>
      TEST_ENVIRON: CIRCLE_CI
    steps:
      - setup_environment
      - checkout
      - run:
          name: Setup test cluster
          command: ./scripts/ensure-test-singlestore-cluster-password.sh
      - restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: singlestore-jdbc-client-{{ checksum "pom.xml" }}
      - run: mvn dependency:go-offline # gets the project dependencies
      - save_cache: # saves the project dependencies
          paths:
            - ~/.m2
          key: singlestore-jdbc-client-{{ checksum "pom.xml" }}
      - run: mvn package -DjavadocExecutable=/usr/lib/jvm/java-8-openjdk-amd64/bin/javadoc
      - store_test_results: # uploads the test metadata from the `target/surefire-reports` directory so that it can show up in the CircleCI dashboard.
          # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: target/surefire-reports
      - store_artifacts: # store the jar as an artifact
          # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: target/singlestore-jdbc-client-1.1.5.jar
      - store_artifacts:
          path: target/singlestore-jdbc-client-1.1.5-browser-sso-uber.jar
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples
  publish:
    machine:
      image: ubuntu-2004:202008-01
    environment:
#      JAVA_HOME: /usr/lib/jvm/java-8-openjdk-amd64
      SONATYPE_USERNAME: memsql
    steps:
      - setup_environment
      - checkout
      - run:
          name: Import GPG key
          command: |
            openssl enc -d -aes-256-cbc -K ${ENCRYPTION_KEY} -iv ${ENCRYPTION_IV} -in ci/secring.asc.enc -out ci/secring.asc
            gpg --import ci/secring.asc
      - run:
          name: Maven Settings
          command: |
            mkdir -p ~/.m2
            cp ci/settings.xml ~/.m2/settings.xml
      - run:
          name: Publish
          command: |
            mvn clean deploy -DskipTests -DjavadocExecutable=/usr/lib/jvm/java-8-openjdk-amd64/bin/javadoc
workflows:
  test:
    jobs:
      - test:
          filters:
            tags:
              only: /^v.*/
          matrix:
            parameters:
              machine_class:
                - large
              singlestore_password:
                - password
              singlestore_image:
                - memsql/cluster-in-a-box:centos-7.1.13-11ddea2a3a-3.0.0-1.9.3
                - singlestore/cluster-in-a-box:centos-7.3.13-761e3259b3-3.2.11-1.11.9
                - singlestore/cluster-in-a-box:centos-7.5.10-d6401ae628-4.0.0-1.12.2
                - singlestore/cluster-in-a-box:centos-7.6.8-ad67e74046-4.0.1-1.13.2
                - singlestore/cluster-in-a-box:alma-7.8.5-144b69022c-4.0.6-1.13.7
  publish:
    jobs:
      - approve-publish:
          type: approval
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - publish:
          requires:
            - approve-publish
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/